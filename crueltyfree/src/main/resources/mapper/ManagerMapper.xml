<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="ManagerMapper">
	
	<select id="getList" resultType="OneInqVo">
		select * from one_inq where grade_up='0' order by one_inq_idx desc
	</select>
	<select id="productList" resultType="ProductVo">
		select * from product order by product_idx desc
	</select>
	<select id="memberList" resultType="MemberVo">
		select * from member 
	</select>
		<select id="productinqList" resultType="ProductInqVo">
		select * from product_inq order by product_inq_idx desc
	</select>
		<select id="reviewList" resultType="ReviewVo">
		select * from review order by review_idx desc
	</select>
	<select id="sellersignList" resultType="OneInqVo">
		select * from one_inq where grade_up ='1' order by one_inq_idx desc
	</select>

	<select id="proselectCount" parameterType="map" resultType="_int">
		select count(*) from product
			where product_del_or_not = "1"
			<if test="searchWord != null">
					<choose>
						<when test="searchField == 'title'">
							AND product_name like CONCAT( '%',#{searchWord},'%')
						</when>
						<when test="searchField == 'content'">
							AND member_nickname like CONCAT( '%',#{searchWord},'%')
						</when>		
						<when test="searchField == 'content2'">
							AND delivery_company like CONCAT( '%',#{searchWord},'%')
						</when>				
					</choose>
				</if>
				order by product_idx desc
	</select>
	<select id="proSelectList" parameterType="map" resultType="ProductVo">
		select * from product
			where product_del_or_not = "1"
			<if test="searchWord != null">
					<choose>
						<when test="searchField == 'title'">
							and product_name like CONCAT( '%',#{searchWord},'%')
						</when>
						<when test="searchField == 'content'">
							AND member_nickname like CONCAT( '%',#{searchWord},'%')
						</when>		
						<when test="searchField == 'content2'">
							AND delivery_company like CONCAT( '%',#{searchWord},'%')
						</when>				
					</choose>
			</if>
			order by product_idx desc
	</select>	
	<select id="memselectCount" parameterType="map" resultType="_int">
		select count(*) from member
			<if test="searchWord != null">
				<where> 
					<choose>
						<when test="searchField == 'title'">
							member_id like CONCAT( '%',#{searchWord},'%')
						</when>
						<when test="searchField == 'content'">
							member_name like CONCAT( '%',#{searchWord},'%')
						</when>				
					</choose>
				</where>
				</if>
				order by member_idx desc
	</select>
	<select id="memSelectList" parameterType="map" resultType="MemberVo">
		select * from member
			<if test="searchWord != null">
				<where>
					<choose>
						<when test="searchField == 'title'">
							member_id like CONCAT( '%',#{searchWord},'%')
						</when>
						<when test="searchField == 'content'">
							member_name like CONCAT( '%',#{searchWord},'%')
						</when>				
					</choose>
				</where>
			</if>
			order by member_idx desc
	</select>	
	<select id="oneselectCount" parameterType="hashMap" resultType="_int">
		select count(*) from one_inq
		where grade_up='0'
			<if test="searchWord != null">
		
					<choose>
						<when test="searchField == 'title'">
							and member_nickname like CONCAT( '%',#{searchWord},'%')
						</when>
						<when test="searchField == 'content'">
							and one_inq_regDate like CONCAT( '%',#{searchWord},'%')
						</when>				
					</choose>

				</if>
				order by one_inq_idx desc
	</select>
	<select id="oneSelectList" parameterType="map" resultType="OneInqVo">
		select * from one_inq
		where grade_up ='0'
			<if test="searchWord != null">
				
					<choose>
						<when test="searchField == 'title'">
							and member_nickname like CONCAT( '%',#{searchWord},'%')
						</when>
						<when test="searchField == 'content'">
							and one_inq_regDate like CONCAT( '%',#{searchWord},'%')
						</when>				
					</choose>
				
			</if>
			order by one_inq_idx desc
	</select>	
	<select id="selselectCount" parameterType="hashMap" resultType="_int">
		select count(*) from one_inq
		where grade_up ='1'
			<if test="searchWord != null">
				
					<choose>
						<when test="searchField == 'title'">
							and member_nickname like CONCAT( '%',#{searchWord},'%')
						</when>
						<when test="searchField == 'content'">
							and one_inq_regDate like CONCAT( '%',#{searchWord},'%')
						</when>				
					</choose>
				
			</if>
			order by one_inq_idx desc
	</select>
	<select id="selSelectList" parameterType="map" resultType="OneInqVo">
		select * from one_inq
		where grade_up ='1'
			<if test="searchWord != null">
				
					<choose>
						<when test="searchField == 'title'">
							and member_nickname like CONCAT( '%',#{searchWord},'%')
						</when>
						<when test="searchField == 'content'">
							and one_inq_regDate like CONCAT( '%',#{searchWord},'%')
						</when>				
					</choose>
				
			</if>
			order by one_inq_idx desc
	</select>
	<select id="proinqselectCount" parameterType="hashMap" resultType="_int">
		select count(*) from product_inq
			<if test="searchWord != null">
				<where>
					<choose>
						<when test="searchField == 'title'">
							member_nickname like CONCAT( '%',#{searchWord},'%')
						</when>
						<when test="searchField == 'content'">
							product_inq_regDate like CONCAT( '%',#{searchWord},'%')
						</when>				
					</choose>
				</where>
				</if>
				order by product_inq_idx desc
	</select>
	<select id="proinqSelectList" parameterType="map" resultType="ProductInqVo">
		select * from product_inq
			<if test="searchWord != null">
				<where>
					<choose>
						<when test="searchField == 'title'">
							member_nickname like CONCAT( '%',#{searchWord},'%')
						</when>
						<when test="searchField == 'content'">
							product_inq_regDate like CONCAT( '%',#{searchWord},'%')
						</when>				
					</choose>
				</where>
			</if>
			order by product_inq_idx desc
	</select>
	<select id="selectCount" parameterType="hashMap" resultType="_int">
		select count(*) from review
			<if test="searchWord != null">
				<where>
					<choose>
						<when test="searchField == 'title'">
							member_nickname like CONCAT( '%',#{searchWord},'%')
						</when>
						<when test="searchField == 'content'">
							review_regDate like CONCAT( '%',#{searchWord},'%')
						</when>				
					</choose>
				</where>
				</if>
				order by review_idx desc
	</select>
	<select id="rvSelectList" parameterType="map" resultType="ReviewVo">
		select * from review
			<if test="searchWord != null">
				<where>
					<choose>
						<when test="searchField == 'title'">
							member_nickname like CONCAT( '%',#{searchWord},'%')
						</when>
						<when test="searchField == 'content'">
							review_regDate like CONCAT( '%',#{searchWord},'%')
						</when>				
					</choose>
				</where>
			</if>
			order by review_idx desc
	</select>
	<update id="delete" parameterType="string">
		update product set product_del_or_not="-1" where product_idx=#{product_idx}
	</update>
	<delete id="memdelete" parameterType="string">
		delete from member where member_idx=#{member_idx}
	</delete>
	<delete id="onedelete" parameterType="string">
		delete from one_inq where one_inq_idx=#{one_inq_idx}
	</delete>
	<delete id="seldelete" parameterType="string">
		delete from one_inq where one_inq_idx=#{one_inq_idx}
	</delete>
	<delete id="proinqdelete" parameterType="string">
		delete from product_inq where product_inq_idx=#{product_inq_idx}
	</delete>
	<delete id="reviewdelete" parameterType="string">
		delete from review where review_idx=#{review_idx}
	</delete>
<!-- 지정한 게시글 내용 수정 구문 -->
	<update id="productUpdate" parameterType="ProductVo">
		update Product
			<set>
				<if test="product_name != null">
					product_name = #{product_name},
				</if>
				<if test="product_price != null">
					product_price = #{product_price},
				</if>
				<if test="product_capa != null">
					product_capa = #{product_capa},
				</if>
				<if test="delivery_company != null">
					delivery_company = #{delivery_company}
				</if>
			</set>
		where product_idx = #{product_idx}
	</update>
	<update id="memberUpdate" parameterType="MemberVo">
		update member
			<set>
				<if test="member_id != null">
					member_id = #{member_id},
				</if>
				<if test="member_name != null">
					member_name = #{member_name},
				</if>
				<if test="member_gender != null">
					member_gender = #{member_gender},
				</if>
				<if test="member_grade != null">
					member_grade = #{member_grade},
				</if>

			</set>
		where member_idx = #{member_idx}
	</update>
	<update id="oneinqUpdate" parameterType="OneInqVo">
		update one_inq
			<set>
				<if test="one_inq_answer != null">
					one_inq_answer = #{one_inq_answer},
				</if>

			</set>
		where one_inq_idx = #{one_inq_idx}
	</update>
	<update id="productinqUpdate" parameterType="ProductInqVo">
		update product_inq
			<set>
				<if test="product_inq_answer != null">
					product_inq_answer = #{product_inq_answer},
				</if>

			</set>
		where product_inq_idx = #{product_inq_idx}
	</update>
	<update id="reviewUpdate" parameterType="ReviewVo">
		update review
			<set>
				<if test="review_content != null">
					review_content = #{review_content},
				</if>

			</set>
		where review_idx = #{review_idx}
	</update>
	<select id="findProductPost" parameterType="string" resultType="ProductVo">
		select * from Product where product_idx = #{product_idx}
	</select>
</mapper>