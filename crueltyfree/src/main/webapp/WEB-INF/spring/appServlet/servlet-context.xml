<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
			
	<!-- 파일업로드 관련 MultipartResolver 빈 등록 -->	
	<beans:bean id="multipartResolver" 
	              class="org.springframework.web.multipart.support.StandardServletMultipartResolver">
	</beans:bean>	
	
	<!-- 컴포넌트 스캔 -->	  	
	<context:component-scan base-package="com.crfr.common" />
	<context:component-scan base-package="com.crfr.controller" />
    <context:component-scan base-package="com.crfr.service.manager" />
    <context:component-scan base-package="com.crfr.vo" />
	<context:component-scan base-package="com.crfr.dao" />
    <context:component-scan base-package="com.crfr.service.mypage" />
	<context:component-scan base-package="com.crfr.service.purchase" />
	<context:component-scan base-package="com.crfr.service.productView" />
 	<context:component-scan base-package="com.crfr.service.product" />
 	<context:component-scan base-package="com.crfr.service.member" />
	<context:component-scan base-package="com.crfr.service.email" />
	<context:component-scan base-package="com.crfr.service.seller" />
	<context:component-scan base-package="com.crfr.service.orderDelivery" />



    <!-- com.crfr.common 패키지에 추가함 -->
	<!-- Interceptor 관련 설정: 사용자의 요청에 대해서 로그인 여부를 체크하는 LoginInterCeptor 설정 -->
	<interceptors>
		<interceptor>
		    <!-- 로그인 체크를 해야만 들어갈 수 있는 주소 -->
			<!-- <mapping path="/**/*.do"/> -->
			<!-- 경로 패턴을 가리키는 특수문자(*: 0개 또는 그 이상의 글자, ?: 1개 글자, **: 0개 또는 그 이상의 폴더 -->
		    <mapping path="/**/mypage_cancelinq.do"/>
		    <mapping path="/**/mypage_coupon.do"/>
		    <mapping path="/**/mypage_deliverymain.do"/>
		    <mapping path="/**/mypage_deliveryreg_edit.do"/>
		    <mapping path="/**/mypage_deliveryreg.do"/>
		    <mapping path="/**/mypage_like.do"/>
		    <mapping path="/**/mypage_main.do"/>
		    <mapping path="/**/mypage_modify_changeinfo.do"/>
		    <mapping path="/**/mypage_modify_info.do"/>
		    <mapping path="/**/mypage_modify_password.do"/>
		    <mapping path="/**/mypage_modifymain.do"/>
		    <mapping path="/**/mypage_nonreview.do"/>
		    <mapping path="/**/mypage_orderinq.do"/>
       <!-- <mapping path="mypage_orderinq_view.do"/> -->		    
		    <mapping path="/**/mypage_productQnA.do"/>
		    <mapping path="/**/mypage_review.do"/>
			
			<!-- 로그인 체크를 하지 않아도 들어갈 수 있는 주소 / 
			예제와 거꾸로 할 거기 때문에 로그인 체크만 막아주면 예외는 필요없음-->
			<!-- <exclude-mapping path="/index.do"/> -->
			
			
			<beans:bean id="LoginInterceptor" class="com.crfr.common.LoginInterceptor"/>
		</interceptor>
	</interceptors>		
	
</beans:beans>
